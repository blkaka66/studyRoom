version: '3.8'

services:
  postgres:
    image: 'postgres:latest'
    environment:
      - POSTGRES_DB=mydatabase
      - POSTGRES_USER=myuser
      - POSTGRES_PASSWORD=secret
    ports:
      - '7782:5432'
    volumes:
      - postgres-data:/var/lib/postgresql/data

  redis:
    image: 'redis:latest'
    ports:
      - '7783:6379'
    volumes:
      - redis-data:/data

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    ports:
      - '32181:32181'
    environment:
      ZOOKEEPER_CLIENT_PORT: 32181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-kafka:7.4.0
    ports:
      - '9092:9092'
    depends_on:
        - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:32181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    volumes:
      - kafka-data:/var/lib/kafka/data
    healthcheck:
      test: [ "CMD", "kafka-topics", "--bootstrap-server", "localhost:9092", "--list" ]
      interval: 5s
      timeout: 3s
      retries: 5

#  studyroom-app:
#    image: your-app-image
#    build:
#      context: .
#    ports:
#      - '8080:8080'
#    environment:
#      SPRING_PROFILES_ACTIVE: docker
#    depends_on:
#      - postgres
#      - redis
    # Kafka는 depends_on에서 빼서, 앱 내부에서 재시도하도록 만들어야 함

volumes:
  postgres-data:
  redis-data:
  zookeeper-data:
  kafka-data:
